{"version": null, "code": "gASVOwUAAAAAAAAoQxJ0AGQBfA58EWQCjQMBAGQAUwCUKIwFaW5wdXSUjAZvdXRwdXSUjAZwYXJhbXOUjAl3aWxkY2FyZHOUjAd0aHJlYWRzlIwJcmVzb3VyY2VzlIwDbG9nlIwHdmVyc2lvbpSMBHJ1bGWUjAljb25kYV9lbnaUjA1jb250YWluZXJfaW1nlIwQc2luZ3VsYXJpdHlfYXJnc5SMD3VzZV9zaW5ndWxhcml0eZSMC2Vudl9tb2R1bGVzlIwMYmVuY2hfcmVjb3JklIwFam9iaWSUjAhpc19zaGVsbJSMD2JlbmNoX2l0ZXJhdGlvbpSMD2NsZWFudXBfc2NyaXB0c5SMCnNoYWRvd19kaXKUjA1lZGl0X25vdGVib29rlIwPY29uZGFfYmFzZV9wYXRolIwHYmFzZWRpcpSMGHJ1bnRpbWVfc291cmNlY2FjaGVfcGF0aJSMGF9faXNfc25ha2VtYWtlX3J1bGVfZnVuY5R0lF2UKE5YrQMAAAogICAgICAgIGNyZWF0ZV9iZWRncmFwaCgpIHt7CiAgICAgICAgICAgIGxvY2FsIHJlYWRzPSQxCiAgICAgICAgICAgIGxvY2FsIHN0cmFuZD0kMgogICAgICAgICAgICBsb2NhbCBtdHBseXI9JDMKICAgICAgICAgICAgbG9jYWwgYmc9JDQKCiAgICAgICAgICAgIHRtcF8xPSQobWt0ZW1wIHRtcC5YWFhYWCkKICAgICAgICAgICAgdG1wXzI9JChta3RlbXAgdG1wLlhYWFhYKQoKICAgICAgICAgICAgemNhdCAtZiAkcmVhZHMgICAgICAgICAgICAgICAgID4gJHRtcF8xCgogICAgICAgICAgICBjYXQgJHRtcF8xICAgICAgICAgICAgICAgICB8IHNvcnQgLVMxRyAtLXBhcmFsbGVsPXt0aHJlYWRzfSAtazEsMSAtazIsMm4gICAgICAgICAgICAgICAgIHwgYmVkdG9vbHMgZ2Vub21lY292IC1iZyAkc3RyYW5kIC1pIC0gLWcge3BhcmFtcy5jaHJvbXN9ICAgICAgICAgICAgICAgICA+ICR0bXBfMgogICAgICAgICAgICAKICAgICAgICAgICAgY2F0ICR0bXBfMiAgICAgICAgICAgICAgICAgfCBwaWd6IC1wIHt0aHJlYWRzfSAgICAgICAgICAgICAgICAgPiAkYmcKCiAgICAgICAgICAgIHJtICR0bXBfMSAkdG1wXzIKICAgICAgICB9fQogICAgICAgIAogICAgICAgICMgQ3JlYXRlIGJlZGdyYXBocyBmb3IgZWFjaCBzdHJhbmQKICAgICAgICAjIE5vcm1hbGl6ZWQgYnkgdGhlIG51bWJlciBvZiByZWFkcyBpbiB0aGUgc3RhcnRpbmcgYmVkIGZpbGUgKFJQTSkKICAgICAgICBjcmVhdGVfYmVkZ3JhcGggICAgICAgICAgICAge2lucHV0fSAgICAgICAgICAgICAiLXN0cmFuZCArIiAgICAgICAgICAgICAxICAgICAgICAgICAgIHtvdXRwdXQucF9iZ30gCgogICAgICAgIGNyZWF0ZV9iZWRncmFwaCAgICAgICAgICAgICB7aW5wdXR9ICAgICAgICAgICAgICItc3RyYW5kIC0iICAgICAgICAgICAgIC0xICAgICAgICAgICAgIHtvdXRwdXQubl9iZ30gCiAgICAgICAglGgPaBKGlGWMBXNoZWxslIWUdJQu", "rule": "create_bedgraphs", "input": ["Xrn2/beds/293flpin_Xrn2_MT_R2_xrn2-r2_tss.bed.gz"], "log": ["Xrn2/logs/293flpin_Xrn2_MT_R2_xrn2-r2_tss_bedgraph.err", "Xrn2/logs/293flpin_Xrn2_MT_R2_xrn2-r2_tss_bedgraph.out"], "params": ["'/beevol/home/erickson/ref/hg38/Homo_sapiens.GRCh38.dna.primary_assembly.UCSC.fa.fai'", "'293flpin_Xrn2_MT_R2_xrn2-r2_tss_bedgraph'", "8"], "shellcmd": "\n        create_bedgraph() {\n            local reads=$1\n            local strand=$2\n            local mtplyr=$3\n            local bg=$4\n\n            tmp_1=$(mktemp tmp.XXXXX)\n            tmp_2=$(mktemp tmp.XXXXX)\n\n            zcat -f $reads                 > $tmp_1\n\n            cat $tmp_1                 | sort -S1G --parallel=6 -k1,1 -k2,2n                 | bedtools genomecov -bg $strand -i - -g /beevol/home/erickson/ref/hg38/Homo_sapiens.GRCh38.dna.primary_assembly.UCSC.fa.fai                 > $tmp_2\n            \n            cat $tmp_2                 | pigz -p 6                 > $bg\n\n            rm $tmp_1 $tmp_2\n        }\n        \n        # Create bedgraphs for each strand\n        # Normalized by the number of reads in the starting bed file (RPM)\n        create_bedgraph             Xrn2/beds/293flpin_Xrn2_MT_R2_xrn2-r2_tss.bed.gz             \"-strand +\"             1             Xrn2/bg/293flpin_Xrn2_MT_R2_xrn2-r2_tss_pos.bedgraph.gz \n\n        create_bedgraph             Xrn2/beds/293flpin_Xrn2_MT_R2_xrn2-r2_tss.bed.gz             \"-strand -\"             -1             Xrn2/bg/293flpin_Xrn2_MT_R2_xrn2-r2_tss_neg.bedgraph.gz \n        ", "incomplete": false, "starttime": 1691092561.0, "endtime": 1691092641.0, "job_hash": 2989786845546, "conda_env": null, "container_img_url": null}