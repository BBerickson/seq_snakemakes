# ===== Rules to count reads overlapping genes =================================


# Run featureCounts
rule featureCounts:
    input:
        expand(
            PROJ + "/bams/{sample}_" + INDEX_SAMPLE + "_" + SEQ_DATE + ".bam",
            sample = SAMS_UNIQ
        )
    output:
        PROJ + "/stats/" + PROJ + "_featureCounts.tsv"
    params:
        job_name = PROJ + "_featureCounts",
        memory   = MEMORY,
        args     = CMD_PARAMS["featureCounts"]
    log:
        out = PROJ + "/logs/" + PROJ + "_featureCounts.out",
        err = PROJ + "/logs/" + PROJ + "_featureCounts.err"
    message:
        "Counting " + PROJ + " reads with featureCounts"
    threads:
        16
    shell:
        """
        featureCounts \
            {params.args} \
            -F GTF \
            -a {GTF} \
            -o {output} \
            -T {threads} \
            {input}
        """

# Combine bowtie2 summaries
rule bowtie_summary_FP:
    input:
        expand(
            PROJ + "/bams/{sample}_" + INDEX_MAP + "_bowtie_R1_stats.txt",
            sample = SAMS_UNIQ
        )
    output:
        PROJ + "/stats/" + PROJ + "_bowtie.tsv"
    params:
        job_name = PROJ + "_bowtie_summary",
        memory   = 4
    log:
        out = PROJ + "/logs/" + PROJ + "_bowtie_summary.out",
        err = PROJ + "/logs/" + PROJ + "_bowtie_summary.err"
    message:
        "Creating " + PROJ + " bowtie2 summary"
    threads:
        1
    run:
        with open(output[0], "w") as out:
            for file in input:
                name = os.path.basename(file)
                name = re.sub("_" + INDEX_MAP + "_bowtie_R1_stats.txt", "", name)

                for line in open(file, "r"):
                    line  = re.sub("; of these:", "", line.strip())
                    line  = re.sub(" \([0-9\.%]+\)", "", line)
                    words = line.split(" ")
                    num   = words[0]
                    met   = words[1:]
                    met   = " ".join(met)

                    out.write("%s\t%s\t%s\n" % (name, met, num))
                    
