# ===== Rules for intersecting reads with genomic regions ======================


# Intersect reads with metaplot regions
# these gene counts are used for the per-gene subsampling
# these are also used for generating plots without subsampling
use rule metaplot_beds as metaplot_beds_nosub with:
    input:
        PROJ + "/beds/{sample}_shift.bed.gz"
    output:
        S    = meta_temp_fn(PROJ + "/metaplot_beds/{sample}_{region}_S.bed.gz"),
        AS   = meta_temp_fn(PROJ + "/metaplot_beds/{sample}_{region}_AS.bed.gz"),
        S_N  = meta_temp_fn(PROJ + "/metaplot_beds/{sample}_{region}_S_N.bed.gz"),
        AS_N = meta_temp_fn(PROJ + "/metaplot_beds/{sample}_{region}_AS_N.bed.gz")
    params:
        job_name = "{sample}_{region}_metaplot_beds",
        bed      = lambda wildcards: META_BEDS[wildcards.region]
    log:
        out = PROJ + "/logs/{sample}_{region}_metaplot_beds.out",
        err = PROJ + "/logs/{sample}_{region}_metaplot_beds.err"


# making metaplot genes.tsv file
rule metaplot_genes:
    input:
        expand(
        PROJ + "/metaplot_beds/{sample}_gene_S_N.bed.gz",
          sample = SAMS_UNIQ
        )
    output:
        PROJ  + "/objects/metaplot_genes.tsv.gz"
    params:
        job_name = "metaplot_genes_file",
        groups = GROUPS
    resources:
        memory   = 4
    log:
        out = PROJ + "/logs/metaplot_genes.out",
        err = PROJ + "/logs/metaplot_genes.err"
    threads: 
        1
    script:
        '../R_scripts/metaplot_genelist.R'
        
