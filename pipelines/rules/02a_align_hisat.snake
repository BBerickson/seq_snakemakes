# ====== Rules for aligning reads =================================


# Align trimmed reads with hisat2 PE
rule hisatPE:
    input:
        R1  = PROJ + "/{sample}_R1.fastq.gz",
        R2  = PROJ + "/{sample}_R2.fastq.gz"
    output:
        bam   = temp(PROJ + "/{sample}_" + INDEX_MAP + ".bam"),
        bai   = temp(PROJ + "/{sample}_" + INDEX_MAP + ".bam.bai"),
        stats = PROJ + "/bams/{sample}_" + INDEX_MAP + "_hisat_stats.txt"
    params:
        job_name = "{sample}_hisatPE",
        idx      = INDEX_PATH + INDEX_MAP,
        args     = CMD_PARAMS["hisat2"],
        args2    = CMD_PARAMS["samtools"],
        sortname = PROJ + "/{sample}.temp"
    resources:
        memory   = MEMORY * 3 + 10
    log:
        out = PROJ + "/logs/{sample}_hisat.out",
        err = PROJ + "/logs/{sample}_hisat.err"
    message:
        "Aligning reads with hisat2 for {wildcards.sample}"
    threads: 
        12
    shell:
        """
        hisat2 \
            -p {threads} \
            -x {params.idx} \
            -1 {input.R1} \
            -2 {input.R2} \
            {params.args} \
            2> {output.stats} \
            | samtools view {params.args2} - \
            | samtools sort - -T {params.sortname} -@ {threads} -O bam \
            > {output.bam}
        
        samtools index -@ {threads} {output.bam}
        """

# ====== Rules for aligning reads summmary =================================


# Align trimmed reads with hisat2 PE summmary
rule hisatPE_summmary:
    input:
        expand(
           PROJ + "/bams/{sample}_" + INDEX_MAP + "_hisat_stats.txt",
            sample = SAMS_UNIQ
        )
    output:
        PROJ + "/stats/" + PROJ + "_aligned.tsv"
    params:
        job_name = "hisatPE_summmary"
    resources:
        memory   = 4
    log:
        out = PROJ + "/logs/hisat_summmary.out",
        err = PROJ + "/logs/_hisat_summmary.err"
    message:
        "summmary hisat2 "
    threads:
        1
    run:
        with open(output[0], "w") as out:
            for file in input:
                name = os.path.basename(file)
                name = re.sub("_" + INDEX_MAP + "_hisat_stats.txt", "", name)

                for line in open(file, "r"):
                    match = re.search("overall alignment rate", line)

                    if match:
                        num = re.search("[0-9.%]+", line)
                        num = num.group(0).strip()
                        met = re.search("[a-z\s]+", line).group(0)
                        met = met.strip()
                        met = re.sub(" ", "_", met)

                        out.write("%s\t%s\t%s\n" % (name, met, num))
                    else:
                        line  = re.sub("; of these:", "", line.strip())
                        line  = re.sub(" \([0-9\.%]+\)", "", line)
                        words = line.split(" ")
                        num   = words[0]
                        met   = words[1:]
                        met   = " ".join(met)

                        out.write("%s\t%s\t%s\n" % (name, met, num))
                        
                        


                    