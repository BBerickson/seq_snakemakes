# ====== Rules for getting overall results =================================

# gathering results
rule gathering_results:
    input:
        cutadapt = PROJ + "/stats/" + PROJ + "_cutadapt.tsv",
        aligned  = PROJ + "/stats/" + PROJ + "_aligned.tsv",
        dedup    = PROJ + "/stats/" + PROJ + "_" + INDEX_MAP + "_UMI_dedup.tsv",
        fc_file  = expand( PROJ + "/stats/{sample}_summary_featureCounts.tsv",
            sample = SAMS_UNIQ
        )
    output:
        PROJ + "/report/" + PROJ + "_results.tsv"
    params:
        job_name = "results",
        indexmap = INDEX_MAP,
        sam_new  = SAMPLES,
        project  = PROJ,
        filterty = CMD_PARAMS["filter_results"],
        script = "pipelines/R_scripts/results.R"
    resources:
        memory   = lambda wildcards, input: memory_estimator(input, 1, 1) # multiplier, min, max, unit=GB
    log:
        out = PROJ + "/logs/results.out",
        err = PROJ + "/logs/results.err"
    message:
        "getting final results"
    threads: 
        1
    shell:
        """
        Rscript {params.script} "{input.dedup}" "{input.cutadapt}" "{input.aligned}" "{input.fc_file}" "{params.indexmap}" "{params.sam_new}" "{params.project}" "{params.filterty}" "{output}"

        """
  
rule create_plots:
    input:
        PROJ + "/report/" + PROJ + "_results.tsv"
    output:
        SEQ_DATE + "_" + PROJ + "_" + INDEXES[0] + "_qc_analysis.html"
    params:
        job_name   = PROJ + "_qc_html"
    resources:
        memory   = lambda wildcards, input: memory_estimator(input, 1, 1) # multiplier, min, max, unit=GB
    log:
        out = PROJ + "/logs/" + PROJ + "_qc_html.out",
        err = PROJ + "/logs/" + PROJ + "_qc_html.err"
    threads:
        1
    shell:
        """
        touch .here
        Rmd=pipelines/src/Rmds/analysis.Rmd
        script=pipelines/src/Rmds/knit_rmd.R
        out="_qc_analysis"

        Rscript $script \
            -i $Rmd \
            -o $out \
            -p {PROJ} \
            -m {INDEX_MAP} \
            -d {SEQ_DATE} \
            -x {INDEXES[0]} \
            -s {SAMPLES_FILE} 
        """
     
