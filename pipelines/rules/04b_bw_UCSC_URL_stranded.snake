# ====== Rules for saving files on amc-sandbox and creating URLS for UCSC genome browser===============================


# copy to amc-sandbox and make URL
rule bamCoverage_URL:
    input:
        fw      =   PROJ   + "/bw/{newnam}_aligned_{index}_" + SEQ_DATE + "_norm_{suffix}_fw.bw",
        rev     =   PROJ   + "/bw/{newnam}_aligned_{index}_" + SEQ_DATE + "_norm_{suffix}_rev.bw"
    output:
        stats   = temp(PROJ + "/bw/{newnam}_aligned_{index}_" + SEQ_DATE + "_norm_{suffix}_bamCoverage_stats.txt")
    params:
        job_name = "{newnam}_aligned_{index}_" + SEQ_DATE + "_{suffix}_UCSC_URL",
        color    = lambda wildcards: _get_col(wildcards.newnam, COLS_DICT),
        url_fw   = "http://amc-sandbox.ucdenver.edu/" + USER + "/" + SEQ_DATE + "_" + PROJ + "/{newnam}_aligned_{index}_" + SEQ_DATE + "_norm_{suffix}_fw.bw",
        url_rev  = "http://amc-sandbox.ucdenver.edu/" + USER + "/" + SEQ_DATE + "_" + PROJ + "/{newnam}_aligned_{index}_" + SEQ_DATE + "_norm_{suffix}_rev.bw"
    resources:
        memory   = lambda wildcards, input: memory_estimator(input, 1, 1) # multiplier, min, max, unit=GB
    log:
        out = PROJ + "/logs/{newnam}_aligned_{index}_" + SEQ_DATE + "_{suffix}_bamCoverage_URL.out",
        err = PROJ + "/logs/{newnam}_aligned_{index}_" + SEQ_DATE + "_{suffix}_bamCoverage_URL.err"
    threads: 
        1
    container: None
    shell:
        """
        echo "track type=bigWig visibility=full name='{wildcards.newnam}_{SEQ_DATE}_{wildcards.suffix}_fw' description='{wildcards.newnam}_{SEQ_DATE}_{wildcards.suffix}_fw' color={params.color} bigDataUrl={params.url_fw}" > {output.stats}
        echo "track type=bigWig visibility=full name='{wildcards.newnam}_{SEQ_DATE}_{wildcards.suffix}_rev' description='{wildcards.newnam}_{SEQ_DATE}_{wildcards.suffix}_rev' color={params.color} bigDataUrl={params.url_rev}" >> {output.stats}
        ssh amc-sandbox 'mkdir -p ./public_html/{SEQ_DATE}_{PROJ}'
        scp {input.fw} amc-sandbox:./public_html/{SEQ_DATE}_{PROJ}
        scp {input.rev} amc-sandbox:./public_html/{SEQ_DATE}_{PROJ}
        
        """


# Combine URLS into one file
rule bamCoverage_summary:
    input:
        lambda wildcards: sorted([
            PROJ + f"/bw/{newnam}_aligned_{index}_{SEQ_DATE}_norm_{suffix}_bamCoverage_stats.txt"
            for newnam, index, suffix in zip(DF_SAM_NORM['Newnam'], DF_SAM_NORM['Index'], DF_SAM_NORM['Suffix'])
            if index == wildcards.index
        ])
    output:
        PROJ + "/URLS/" + PROJ + "_{index}_" + SEQ_DATE + "_norm_{suffix}_bw_URL.txt"
    params:
        job_name = PROJ + "_{index}_" + SEQ_DATE + "_{suffix}_cat_URL"
    resources:
        memory   = lambda wildcards, input: memory_estimator(input, 1, 1) # multiplier, min, max, unit=GB
    log:
        out = PROJ + "/logs/" + PROJ + "_{index}_" + SEQ_DATE + "_{suffix}_bamCoverage_summary.out",
        err = PROJ + "/logs/" + PROJ + "_{index}_" + SEQ_DATE + "_{suffix}_bamCoverage_summary.err"
    threads:
        1
    shell:
        """
        cat {input} > {output}
        """

