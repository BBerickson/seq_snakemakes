# ====== Rules for making standard sense 5 matrix files =================================

# stranded sense matrix files
rule my_5_matrix:
    input:
        bw  =   PROJ   + "/bw/{newnam}_" + INDEX_SAMPLE + "_" + SEQ_DATE + "_" + NORMS + ".bw"
    output:
        matrix = temp(PROJ   + "/matrix/{newnam}_temp0_5_matrix.gz")
    params:
        job_name = "{newnam}_matrix",
        args     = CMD_PARAMS["reference5"]  + CMD_PARAMS["BL"],
        my_ref   = MY_REF
    resources:
        memory   = MEMORY * 5
    log:
        out = PROJ + "/logs/{newnam}_5_matrix.out",
        err = PROJ + "/logs/{newnam}_5_matrix.err"
    message:
        "5 matrix files {wildcards.newnam}"
    threads: 
        12
    shell:
        """
        # 
        computeMatrix reference-point \
          {params.args} \
          -R {params.my_ref} \
          -S {input.bw} \
          -p {threads} \
          -o {output.matrix}

        """

# stranded sense matrix files
rule fix_5_matrix:
    input:
        PROJ   + "/matrix/{newnam}_temp0_5_matrix.gz"
    output:
        PROJ + "/matrix/5_{newnam}_" + INDEX_SAMPLE + "_" + SEQ_DATE + "_" + NORM5 + "_matrix.gz"
    params:
        job_name = "{newnam}_sense_matrix",
        args    = CMD_PARAMS["filter5"]
    resources:
        memory   = 4
    log:
        out = PROJ + "/logs/{newnam}_fix_5_matrix.out",
        err = PROJ + "/logs/{newnam}_fix_5_matrix.err"
    message:
        "fix standard 5 matrix files {wildcards.newnam}"
    threads: 
        1
    script:
        '../R_scripts/MatrixTrim.R'
        
# make url's and scp to sandbox
rule my_5_url:
    input:
        PROJ + "/matrix/5_{newnam}_" + INDEX_SAMPLE + "_" + SEQ_DATE + "_" + NORM5 + "_matrix.gz"
    output:
        temp(PROJ + "/matrix/5.{newnam}_matrix.url.txt")
    params:
        job_name = PROJ + "_5_matrix_url",
        color    = _get_col,
        url_out  = "http://amc-sandbox.ucdenver.edu/" + USER + "/" + SEQ_DATE + "_" + PROJ + "/5_{newnam}_" + INDEX_SAMPLE + "_" + SEQ_DATE + "_" + NORM5 + "_matrix.gz"
    resources:
        memory   = MEMORY
    log:
        out = PROJ + "/logs/{newnam}_5_matrix_url.out",
        err = PROJ + "/logs/{newnam}_5_matrix_url.err"
    message:
        "Creating 5_matrix url for {wildcards.newnam}"
    threads:
        1
    shell:
        """
        # fix R appended file remote read error
        computeMatrixOperations relabel -m {input} -o {input}
        echo {params.url_out} 5 5.{wildcards.newnam}_{NORMS}_{SEQ_DATE} {params.color} >> {output[0]}
        ssh amc-sandbox 'mkdir -p ./public_html/{SEQ_DATE}_{PROJ}'
        scp {input[0]} amc-sandbox:./public_html/{SEQ_DATE}_{PROJ}
        
        """
 
 # Combine urls
rule my_5_url_summary:
    input:
        sorted(expand(
            PROJ + "/matrix/5.{newnam}_matrix.url.txt",
            newnam = NAMS_UNIQ
        ))
    output:
        PROJ + "/URLS/5_" + PROJ + "_" + INDEX_SAMPLE + "_" + NORM5 + "_matrix.url.txt"
    params:
        job_name = PROJ + "_5_matrix_url"
    resources:
        memory   = 4
    log:
        out = PROJ + "/logs/" + PROJ + "_5_matrix_url.out",
        err = PROJ + "/logs/" + PROJ + "_5_matrix_url.err"
    message:
        "Creating " + PROJ + " sense 5_matrix url"
    threads:
        1
    run:
        with open(output[0], "w") as out:
            for file in input:
                for line in open(file, "r"):
                    out.write(line)




