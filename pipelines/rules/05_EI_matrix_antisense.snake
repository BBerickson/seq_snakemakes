# ====== Rules for making standard EI matrix files =================================

# stranded antisense matrix files
rule my_EI_amtisense_matrix2:
    input:
        fw  =   PROJ   + "/bw/{newnam}_" + INDEX_SAMPLE + "_" + SEQ_DATE + NORMS + "_fw.bw",
        rev =   PROJ   + "/bw/{newnam}_" + INDEX_SAMPLE + "_" + SEQ_DATE + NORMS + "_rev.bw"
    output:
        asense   = temp(PROJ   + "/matrix/{newnam}_temp02_aEI_matrix.gz"),
        asense1  = temp(PROJ   + "/matrix/{newnam}_temp12_aEI_matrix.gz"),
        asense2  = temp(PROJ   + "/matrix/{newnam}_temp22_aEI_matrix.gz")
    params:
        job_name = "{newnam}_EI_antisense_matrix2",
        args     = CMD_PARAMS["EI"] + CMD_PARAMS["bamCoverageBL"],
        fw_ref   = EI_FW_REF,
        rev_ref  = EI_REV_REF
    resources:
        memory   = lambda wildcards, input: memory_estimator(input, 2, 5)
    log:
        out = PROJ + "/logs/{newnam}_antisense_EI_matrix2.out",
        err = PROJ + "/logs/{newnam}_antisense_EI_matrix2.err"
    message:
        "standard antisense EI matrix files {wildcards.newnam}"
    threads: 
        12
    shell:
        """
        # 
        computeMatrix scale-regions \
          {params.args} \
          -R {params.fw_ref} \
          -S {input.rev} \
          -p {threads} \
          -o {output.asense1}

        computeMatrix scale-regions \
          {params.args} \
          -R {params.rev_ref} \
          -S {input.fw} \
          -p {threads} \
          -o {output.asense2}

        computeMatrixOperations rbind -m {output.asense1} {output.asense2} -o {output.asense}

        """

# stranded asense matrix files
rule fix_EI_asense_matrix2:
    input:
        PROJ   + "/matrix/{newnam}_temp02_aEI_matrix.gz"
    output:
        temp(PROJ   + "/matrix/{newnam}_temp02_fix_aEI_matrix.gz")
    params:
        job_name = "{newnam}_EI_asense_matrix2",
        args    = CMD_PARAMS["EI"] + " unstranded"
    resources:
        memory   = 4
    log:
        out = PROJ + "/logs/{newnam}_fix_EI_asense_matrix2.out",
        err = PROJ + "/logs/{newnam}_fix_EI_asense_matrix2.err"
    message:
        "fix standard asense EI matrix files {wildcards.newnam}"
    threads: 
        1
    script:
        '../R_scripts/MatrixTrim.R'
        
# make url's and scp to sandbox
rule my_EI_url:
    input:
        matrix2 = PROJ   + "/matrix/{newnam}_temp02_fix_aEI_matrix.gz"
    output:
        temp(PROJ + "/matrix/EI.{newnam}_matrix.url.txt"),
        PROJ + "/matrix/EI_{newnam}_" + INDEX_SAMPLE + "_" + SEQ_DATE + NORMEI[1] + "_anti_matrix.gz"
    params:
        job_name = PROJ + "_EI_matrix_url2",
        color    = _get_col,
        groupkey = lambda wildcards: next((k for k, v in GROUP2.items() if wildcards.newnam in v), "self"),
        url_anti = "http://amc-sandbox.ucdenver.edu/" + USER + "/" + PROJ + "/EI_{newnam}_" + INDEX_SAMPLE + "_" + SEQ_DATE + NORMEI[1] + "_anti_matrix.gz"
    resources:
        memory   = 4
    log:
        out = PROJ + "/logs/{newnam}_sense_EI_matrix_url2.out",
        err = PROJ + "/logs/{newnam}_sense_EI_matrix_url2.err"
    message:
        "Creating sense EI_matrix url for {wildcards.newnam}"
    threads:
        1
    shell:
        """
        # fix for strange side affect that only the 1 line loads from sandbox
        computeMatrixOperations relabel -m {input.matrix2} -o {output[1]}
        ssh amc-sandbox 'mkdir -p ./public_html/{PROJ}'
        echo {params.url_anti} {params.groupkey} EI.{wildcards.newnam}_{SEQ_DATE}_anti {params.color} >> {output[0]}
        scp {output[1]} amc-sandbox:./public_html/{PROJ}
        """
        
# Combine urls
rule my_EI_url_summary:
    input:
        sorted(expand(
            PROJ + "/matrix/EI.{newnam}_matrix.url.txt",
            newnam = newnam
        ))
    output:
        PROJ + "/URLS/EI_" + PROJ + "_" + INDEX_SAMPLE + NORMEI[1] + "_matrix.url.txt"
    params:
        job_name = PROJ + "_sense_EI_matrix_url"
    resources:
        memory   = 1
    log:
        out = PROJ + "/logs/" + PROJ + "_sense_EI_matrix_url.out",
        err = PROJ + "/logs/" + PROJ + "_sense_EI_matrix_url.err"
    message:
        "Creating " + PROJ + " sense EI_matrix url"
    threads:
        1
    run:
        with open(output[0], "w") as out:
            for file in input:
                for line in open(file, "r"):
                    out.write(line)




